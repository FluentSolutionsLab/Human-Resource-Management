services:
  hr_management_api:
    image: hr_management_api
    container_name: hr_management_api
    build:
      context: .
      dockerfile: src/HRManagement.Api/Dockerfile
      args:
        - BUILD_CONFIGURATION=debug
    ports:
      - 5149:5149
    depends_on:
      - sqlserver.configurator
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Default=Server=sqlserver;Database=HRManagement;User=sa;Password=${DB_PASSWORD:-Password123};TrustServerCertificate=True
    volumes:
      - ~/.rdbg:/remote_debugger:rw

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: hr_management_sqlserver
    env_file:
      - .env
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: ${DB_PASSWORD:-Password123}
      MSSQL_PID: 'Developer'
    ports:
      - '1433:1433'
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '${DB_PASSWORD:-Password123}' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s

  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: hr_management_sqlserver_config
    env_file:
      - .env
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P '${DB_PASSWORD:-Password123}' -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
volumes:
  sqlserver_data: